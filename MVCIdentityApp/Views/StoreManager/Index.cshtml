﻿@model IEnumerable<PolleySportStore.Product>

@helper Truncate(string input, int length)
{
	if(!string.IsNullOrEmpty(input))
	{
		if (input.Length <= length)
		{
			@input
		}
		else
		{
			@input.Substring(0, length)<text>...</text>
		}
	}
}

@{
	ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
	@Html.ActionLink("Create New", "Create")
</p>

<table class="table table-striped">
	<tr>
		<th>
			#
		</th>
		<th>
			Name
		</th>
		<th>
			Category
		</th>
		<th>
			Sub Category
		</th>
		<th>
			Description
		</th>
		<th>
			Price
		</th>
		<th>Actions</th>
	</tr>
	@foreach (var item in Model)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.ProductId)
			</td>
			<td>
				@Truncate(item.Name, 15)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Category.CategoryName)
			</td>
			<td>
				@Truncate(item.SubCategory.SubCategoryName, 25)
			</td>
			<td>
				@Truncate(item.Description, 25)
			</td>
			<td>
				@String.Format("{0:c}", item.Price)
			</td>
			<td>
				@Html.ActionLink("Edit", "Edit", new { id = item.ProductId }, new { @class = "btn btn-success" }) |
				@Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
				@Html.ActionLink("Delete", "Delete", new { id = item.ProductId }, new { @class = "btn btn-danger" })
			</td>
		</tr>
	}
</table>